{"version":3,"file":"index.es.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/utilities/validator.js","../src/components/Home.js","../src/index.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","\n/**\n* Returns the email validation error\n* @param  {String}  email   user email\n* @return {String}          email error\n*/\nconst emailValidator = (email) => {\n    let error = null;\n\n    if (!email || email.length === 0) {\n        error = '';\n    } else if (email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n        error = 'Invalid email address';\n    }\n    return error;\n};\n\n/**\n * Returns the password validation error\n * @param  {String}  password   user password\n * @return {String}             password error\n */\nconst passwordValidator = (password = '') => {\n    let passwordError = null;\n    const regEx = RegExp(\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\")\n\n    if (!password || password.length === 0) {\n        passwordError = '';\n    } else if (password.length < 8) {\n        passwordError = 'Password must contain atleast 8 characters';\n    } else if (regEx.test(password)) {\n        passwordError = \"Passowrd must contains one letter and one number\"\n    }\n    return passwordError;\n}\n\n\n/**\n * Returns the confirm password validation error\n * @param  {String}  confirmPassword   user confirm password\n * @return {String}             confirm password  error\n */\nconst confirmPasswordValidator = (password = '', confirmPassword = '') => {\n    let confirmPasswordError = null;\n\n    if (confirmPassword.length && password.length) {\n        if (password !== confirmPassword) {\n            confirmPasswordError = 'Confirm password does not match';\n        }\n    } else if (!password) {\n        confirmPasswordError = 'No password to match';\n    }\n\n    return confirmPasswordError;\n}\n\n/**\n * Returns the login password validation error\n * @param  {String}  loginPassword   user login password\n * @return {String}                  login password error\n */\nconst loginPasswordValidator = (password) => {\n    let passwordError = '';\n\n    if (!password || password.length === 0) {\n        passwordError = 'Password is required';\n    }\n    return passwordError;\n}\n\n/**\n * Returns the edit name validation error\n * @param  {String}  name   user edit name\n * @return {String}         edit name error\n */\nconst nameValidator = (name) => {\n    let error = null\n    if (!name || name.length === 0) {\n        error = 'Name is required';\n    } else if (name && !/^[a-zA-Z]*$/.test(name)) {\n        error = 'Invalid name';\n    } else if (!/[A-Z].*/.test(name)) {\n        error = 'Must starts with capital case';\n    } else if (name.split(\" \").length > 1) {\n        error = 'Invalid name';\n    } else if (name.length < 3) {\n        error = 'Username must contain atleast 3 characters'\n    }\n    return error\n}\n\nconst loginUsernameValidator = (username) => {\n    let usernameError = ''\n\n    if (!username || username.length === 0) {\n        usernameError = 'Username is required,'\n    }\n\n    return usernameError;\n}\n\nexport { emailValidator, passwordValidator, confirmPasswordValidator, loginPasswordValidator, nameValidator, loginUsernameValidator };","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./styles.css\";\n\nimport {\n  loginUsernameValidator,\n  loginPasswordValidator,\n  nameValidator,\n  emailValidator,\n  passwordValidator,\n  confirmPasswordValidator\n} from \"../utilities/validator\";\n\n//need to fix the rewriting the button styles\n\n/**\n* Represents the the login sign up functionalities\n*/\nclass Home extends Component {\n\n  /**\n  * Class constructor\n  * @param {Object} props\n  */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      propStyles: {\n        background: this.props.buttonColor,\n        borderRadius: 3,\n        border: 0,\n        color: \"white\",\n        height: 48,\n        width: 300,\n        padding: \"0 30px\",\n        fontSize: \"18px\",\n        fontFamily: this.props.fontFamily\n      },\n      font: {\n        fontFamily: this.props.fontFamily\n      },\n      error: {\n        open: this.props.errorEnable,\n        usernameMessage: \"\",\n        passwordMessage: \"\",\n        confirmPasswordMessage: \"\",\n        emailMessage: \"\",\n        message: this.props.errorMessage\n      },\n      disabledButton: {\n        background: this.props.disabledButtonColor,\n        borderRadius: 3,\n        border: 0,\n        color: \"white\",\n        height: 48,\n        width: 300,\n        padding: \"0 30px\",\n        fontSize: \"18px\",\n        fontFamily: this.props.fontFamily\n      },\n      navigatePage: false,\n      signUpStyles: {\n        color: this.props.buttonColor\n      },\n       errorMessageStyles :{\n        margin: \"auto\",\n        width: \"100%\",\n        paddingBottom: \"30px\",\n        color: \"#FF0000\",\n        font: this.props.fontFamily\n      },\n      \n      signUpPassword: \"\",\n      signUpUsername: \"\",\n      signUpConfirmPassword: \"\",\n      signUpEmail: \"\",\n      loginUsername: \"\",\n      loginPassword: \"\"\n    };\n  }\n\n  /**\n   * Handle login page navigation using props\n   */\n  handleLogin = () => {\n    const { loginUsername, loginPassword } = this.state\n    this.props.handleLogin(loginUsername, loginPassword);\n\n  }\n\n  /**\n   * Hanlde sign up page navigation using props\n   */\n  handleSignUp = () => {\n    const { signUpUsername, signUpEmail, signUpPassword } = this.state\n    this.props.handleSignup(signUpUsername, signUpEmail, signUpPassword );\n\n  }\n\n  /**\n   * Handle rendering sign up content\n   */\n  navigateSignup = () => {\n    let error = this.state.error;\n    error.usernameMessage = \"\";\n    error.passwordMessage = \"\";\n\n    this.setState({\n      navigatePage: true,\n      error\n    });\n  };\n\n  /**\n   * Handle setting login usernmae state\n   * @param  {String} event Changer event of the login username\n   */\n  handleLoginUsername = event => {\n    const username = `${event.target.value}`;\n    let error = this.state.error;\n\n    error.usernameMessage = loginUsernameValidator(username);\n\n    this.setState({\n      error,\n      loginUsername: username\n    });\n  };\n\n  /**\n   * Handle setting login password state\n   * @param  {String} event Changer event of the login password\n   */\n  handleLoginPassword = event => {\n    const password = `${event.target.value}`;\n    let error = this.state.error;\n\n    error.passwordMessage = loginPasswordValidator(password);\n\n    this.setState({\n      error,\n      loginPassword: password\n    });\n  };\n\n  /**\n   * Handle button hover event for mouse enter\n   */\n  handleButtonHoverEnter = () => {\n    const propStyles = {\n      ...this.state.propStyles,\n      background: this.props.buttonHoverColor\n    };\n    this.setState({\n      propStyles\n    });\n  };\n\n  /**\n   * Handle button hover event for mouse leave\n   */\n  handleButtonHoverLeave = () => {\n    const propStyles = {\n      ...this.state.propStyles,\n      background: this.props.buttonColor\n    };\n    this.setState({\n      propStyles\n    });\n\n  };\n\n  /**\n   * Handle sign up button hover for mouse enter\n   */\n  handleSignUpHoverEnter = () => {\n    const signUpStyles = {\n      ...this.state.signUpStyles,\n      color: this.props.buttonHoverColor\n    };\n    this.setState({\n      signUpStyles\n    });\n  };\n\n  /**\n   * Handle sign up button hover for mouse leave\n   */\n  handleSignUpHoverLeave = () => {\n    const signUpStyles = {\n      ...this.state.signUpStyles,\n      color: this.props.buttonColor\n    };\n    this.setState({\n      signUpStyles\n    });\n  };\n\n  /**\n  * Handle setting signup username state\n  * @param  {String} event Changer event of the signup username\n  */\n  handleSignupUsername = event => {\n    const username = `${event.target.value}`;\n    let error = this.state.error;\n\n    error.usernameMessage = loginUsernameValidator(username);\n    error.usernameMessage = nameValidator(username);\n\n    this.setState({\n      error,\n      signUpUsername: username\n    });\n  };\n\n  /**\n   * Handle setting signup password state\n   * @param  {String} event Changer event of the signup password\n   */\n  handleSignupPassword = event => {\n    const password = `${event.target.value}`;\n    let error = this.state.error;\n    let confirmPassword = this.state.signUpConfirmPassword;\n\n    error.passwordMessage = loginPasswordValidator(password);\n    error.passwordMessage = passwordValidator(password);\n\n    error.confirmPasswordMessage = confirmPasswordValidator(\n      password,\n      confirmPassword\n    );\n\n    this.setState({\n      error,\n      signUpPassword: password\n    });\n  };\n\n  /**\n   * Handle setting signup email state\n   * @param  {String} event Changer event of the signup email\n   */\n  handleSignupEmail = event => {\n    const email = `${event.target.value}`;\n    let error = this.state.error;\n\n    //   error.emailMessage = (password);\n    error.emailMessage = emailValidator(email);\n\n    this.setState({\n      error,\n      signUpEmail: email\n    });\n  };\n\n  /**\n   * Handle setting signup confirm password state\n   * @param  {String} event Changer event of the signup confirm password\n   */\n  handleSignupConfirmPassword = event => {\n    const confirmPassword = `${event.target.value}`;\n    let error = this.state.error;\n    let password = this.state.signUpPassword;\n\n    error.confirmPasswordMessage = confirmPasswordValidator(\n      password,\n      confirmPassword\n    );\n\n    this.setState({\n      error,\n      signUpConfirmPassword: confirmPassword\n    });\n  };\n\n  /**\n  * Describes the elements on the login and sign up\n  * @return {String} HTML elements\n  */\n  render() {\n    const {\n      propStyles,\n      font,\n      error,\n      disabledButton,\n      navigatePage,\n      signUpStyles,\n      signUpPassword,\n      signUpConfirmPassword,\n      signUpEmail,\n      signUpUsername,\n      loginUsername,\n      loginPassword,\n      errorMessageStyles\n    } = this.state;\n\n    let loginButton = null;\n    let errorText = null;\n    let mainContent = null;\n    let errorList = null;\n    let signupButton = null;\n\n    let { usernameError, passwordError, emailError, confirmPasswordError } = \"\";\n\n    if (error.usernameMessage || error.passwordMessage || error.emailMessage) {\n      errorText = `${error.usernameMessage} ${error.passwordMessage} ${error.emailMessage}`;\n    } else if (error.open) {\n      errorText = error.message;\n    }\n\n    if (navigatePage) {\n      usernameError = error.usernameMessage;\n      passwordError = error.passwordMessage;\n      emailError = error.emailMessage;\n      confirmPasswordError = error.confirmPasswordMessage;\n\n      errorList = (\n        <div style={errorMessageStyles}>\n        <div  style={font}>\n        <div>{usernameError}</div>\n          <div>{passwordError}</div>\n          <div>{emailError}</div>\n          <div>{confirmPasswordError}</div>\n        </div>\n        </div>\n      );\n    }\n\n    let enebledSignUpButton = (\n      <button\n        type=\"button\"\n        style={propStyles}\n        onClick={this.handleSignUp}\n        onMouseEnter={this.handleButtonHoverEnter}\n        onMouseLeave={this.handleButtonHoverLeave}\n      >\n        Sign up\n      </button>\n    );\n\n    let disbaleSignupButton = (\n      <button type=\"button\" style={disabledButton} disabled={true}>\n        Sign up\n      </button>\n    );\n    const errorMessage = <div style={errorMessageStyles} ><div style={font}>{errorText}</div></div>;\n\n    if (\n      !signUpPassword.length ||\n      !signUpConfirmPassword ||\n      !signUpEmail ||\n      !signUpUsername\n    ) {\n      signupButton = disbaleSignupButton;\n    } else if (\n      error.confirmPasswordMessage ||\n      error.emailMessage ||\n      error.passwordMessage ||\n      error.usernameMessage\n    ) {\n      signupButton = disbaleSignupButton;\n    } else {\n      signupButton = enebledSignUpButton;\n    }\n\n    let enebledLoginButton = (\n      <button\n        type=\"button\"\n        style={propStyles}\n        onClick={this.handleLogin}\n        onMouseEnter={this.handleButtonHoverEnter}\n        onMouseLeave={this.handleButtonHoverLeave}\n      >\n        Login\n      </button>\n    );\n\n    let disbaleLoginButton = (\n      <button type=\"button\" style={disabledButton} disabled={true}>\n        Login\n      </button>\n    );\n\n\n    if (!loginUsername || !loginPassword) {\n      loginButton = disbaleLoginButton;\n    } else if (error.confirmPasswordMessage || error.emailMessage) {\n      loginButton = disbaleLoginButton;\n    } else if (error.open) {\n      loginButton = disbaleLoginButton;\n    } else {\n      loginButton = enebledLoginButton;\n    }\n\n    const login = (\n      <div className={styles.loginContainer}>\n        {errorMessage}\n        <div className={styles.loginGroup}>\n          <input\n            type=\"text\"\n            required\n            style={font}\n            onChange={this.handleLoginUsername}\n          ></input>\n          <label style={font}>Username</label>\n        </div>\n\n        <div className={styles.loginGroup}>\n          <input\n            style={font}\n            type=\"text\"\n            required\n            type=\"password\"\n            onChange={this.handleLoginPassword}\n          ></input>\n          <label style={font}>Password</label>\n        </div>\n\n        <div style={font}>\n          {loginButton}\n\n          <div\n            style={signUpContentStyles}\n            onClick={this.navigateSignup}\n            onMouseEnter={this.handleSignUpHoverEnter}\n            onMouseLeave={this.handleSignUpHoverLeave}\n          >\n            Don't have an account? <b style={signUpStyles}>Sign Up</b>\n          </div>\n        </div>\n      </div>\n    );\n\n    const signUp = (\n      <div>\n        <div className={styles.loginContainer}>\n          {errorList}\n          <div className={styles.loginGroup}>\n            <input\n              type=\"text\"\n              required\n              style={font}\n              onChange={this.handleSignupUsername}\n            ></input>\n            <label style={font}>Username</label>\n          </div>\n\n          <div className={styles.loginGroup}>\n            <input\n              type=\"text\"\n              required\n              style={font}\n              onChange={this.handleSignupEmail}\n            ></input>\n            <label style={font}>Email</label>\n          </div>\n\n          <div className={styles.loginGroup}>\n            <input\n              type=\"text\"\n              required\n              style={font}\n              onChange={this.handleSignupPassword}\n            ></input>\n            <label style={font}>Password</label>\n          </div>\n          <div className={styles.loginGroup}>\n            <input\n              type=\"text\"\n              required\n              style={font}\n              onChange={this.handleSignupConfirmPassword}\n            ></input>\n            <label style={font}>Confirm Password</label>\n          </div>\n\n          <div style={font}>\n            {signupButton}\n          </div>\n        </div>\n      </div>\n    );\n\n    navigatePage === false ? (mainContent = login) : (mainContent = signUp);\n\n    return <div>{mainContent}</div>;\n  }\n}\n\nexport default Home;\n\nHome.propTypes = {\n  buttonColor: PropTypes.string,\n  fontFamily: PropTypes.string,\n  disabledButtonColor: PropTypes.string,\n  buttonHoverColor: PropTypes.string,\n  errorMessage: PropTypes.string,\n  handleSignup: PropTypes.func,\n  handleLogin: PropTypes.func,\n  errorEnable: PropTypes.bool\n};\n\nHome.defaultProps = {\n  buttonColor: \"#5264AE\",\n  buttonHoverColor: \"#6373b6\",\n  disabledButtonColor: \"#a8b1d6\",\n  fontFamily: \"Nunito, Roboto, Arial, sans-serif\",\n  errorMessage: \"Username or password is incorrect❓\",\n  handleLogin: () => console.log('handle login'),\n  handleSignup: () => console.log('handle signup'),\n  errorEnable: false\n};\n\nconst signUpContentStyles = {\n  margin: \"auto\",\n  width: \"80%\",\n  paddingTop: \"40px\"\n};\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Home from './components/Home';\n\nclass LoginModal extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      navigatePage: this.props.navigatePage\n    }\n  }\n\n  render() {\n\n    return (\n      // needs to pass the propes, currently use defalt props\n      <div>\n        <Home \n          handleSignup={this.props.handleSignup}\n          handleLogin={this.props.handleLogin}\n          buttonColor={this.props.buttonColor}\n          disabledButtonColor={this.props.disabledButtonColor}\n          buttonHoverColor={this.props.buttonHoverColor}\n          fontFamily={this.props.fontFamily}\n          errorMessage={this.props.errorMessage}\n          errorEnable={this.props.errorEnable}\n\n        />\n      </div>\n\n\n    )\n  }\n}\n\nexport default LoginModal;\n\nLoginModal.propTypes = {\n  buttonColor: PropTypes.string,\n  fontFamily: PropTypes.string,\n  disabledButtonColor: PropTypes.string,\n  buttonHoverColor: PropTypes.string,\n  errorMessage: PropTypes.string,\n  handleSignup: PropTypes.func,\n  handleLogin: PropTypes.func,\n  errorEnable: PropTypes.bool\n};\n\nLoginModal.defaultProps = {\n  buttonColor: \"#5264AE\",\n  buttonHoverColor: \"#6373b6\",\n  disabledButtonColor: \"#a8b1d6\",\n  fontFamily: \"Nunito, Roboto, Arial, sans-serif\",\n  errorMessage: \"Username or password is incorrect❓\",\n  handleLogin: () => console.log('handle login'),\n  handleSignup: () => console.log('handle signup'),\n  errorEnable: false\n};\n\n"],"names":["emailValidator","email","error","length","test","passwordValidator","password","passwordError","regEx","RegExp","confirmPasswordValidator","confirmPassword","confirmPasswordError","loginPasswordValidator","nameValidator","name","split","loginUsernameValidator","username","usernameError","Home","props","handleLogin","state","loginUsername","loginPassword","handleSignUp","signUpUsername","signUpEmail","signUpPassword","handleSignup","navigateSignup","usernameMessage","passwordMessage","setState","handleLoginUsername","event","target","value","handleLoginPassword","handleButtonHoverEnter","propStyles","buttonHoverColor","handleButtonHoverLeave","buttonColor","handleSignUpHoverEnter","signUpStyles","handleSignUpHoverLeave","handleSignupUsername","handleSignupPassword","signUpConfirmPassword","confirmPasswordMessage","handleSignupEmail","emailMessage","handleSignupConfirmPassword","fontFamily","errorEnable","errorMessage","disabledButtonColor","font","disabledButton","navigatePage","errorMessageStyles","loginButton","errorText","mainContent","errorList","signupButton","emailError","open","message","enebledSignUpButton","disbaleSignupButton","enebledLoginButton","disbaleLoginButton","login","styles","loginContainer","loginGroup","signUpContentStyles","signUp","Component","propTypes","PropTypes","string","func","bool","defaultProps","console","log","LoginModal"],"mappings":"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"}